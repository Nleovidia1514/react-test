{"version":3,"sources":["store/actions.js","components/Fact.js","App.js","reportWebVitals.js","store/reducer.js","store/effects.js","index.js"],"names":["FETCH_FACT","FETCH_FACT_SUCCESS","styles","bounce","animation","animationName","Radium","keyframes","animations","name","bounceIn","bounceInDown","bounceInLeft","bounceInRight","bounceInUp","Fact","fact","useEffect","random","Math","floor","length","console","log","className","style","text","fontSize","href","source_url","target","rel","source","App","dispatch","useDispatch","useSelector","state","currentFact","loading","fetchFact","useCallback","type","pulse","marginTop","padding","cursor","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","fetchFactEffect","watchEffects","action","fetch","res","json","data","put","payload","takeEvery","actions","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1187ec9e.chunk.js","sourcesContent":["export const FETCH_FACT = 'FETCH_FACT';\r\nexport const fetchFactAction = () => ({\r\n    type: FETCH_FACT\r\n});\r\n\r\nexport const FETCH_FACT_SUCCESS = 'FETCH_FACT_SUCCESS';\r\nexport const fetchFactSuccessAction = (fact) => ({\r\n    type: FETCH_FACT_SUCCESS,\r\n    payload: fact\r\n});","import React, { useEffect } from 'react';\r\nimport {\r\n  bounce,\r\n  bounceIn,\r\n  bounceInDown,\r\n  bounceInLeft,\r\n  bounceInRight,\r\n  bounceInUp,\r\n} from 'react-animations';\r\nimport Radium, { StyleRoot } from 'radium';\r\n\r\nconst styles = {\r\n  bounce: {\r\n    animation: 'x .5s',\r\n    animationName: Radium.keyframes(bounce, 'bounce'),\r\n  },\r\n};\r\n\r\nconst animations = [\r\n  {\r\n    name: 'bounceIn',\r\n    animation: bounceIn,\r\n  },\r\n  {\r\n    name: 'bounceInDown',\r\n    animation: bounceInDown,\r\n  },\r\n  {\r\n    name: 'bounceInLeft',\r\n    animation: bounceInLeft,\r\n  },\r\n  {\r\n    name: 'bounceInRight',\r\n    animation: bounceInRight,\r\n  },\r\n  {\r\n    name: 'bounceInUp',\r\n    animation: bounceInUp,\r\n  },\r\n];\r\n\r\nconst Fact = ({ fact }) => {\r\n  useEffect(() => {\r\n    const random = Math.floor(Math.random() * animations.length);\r\n    console.log(animations[random].name, animations[random].animation);\r\n    styles.bounce.animationName = Radium.keyframes(\r\n      animations[random].animation,\r\n      animations[random].name\r\n    );\r\n  }, [fact]);\r\n\r\n  return (\r\n    <StyleRoot>\r\n      <div className='test' style={styles.bounce}>\r\n        {fact.text}\r\n      </div>\r\n      <div style={{ fontSize: 15 }}>\r\n        Source:{' '}\r\n        <a href={fact.source_url} target='_blank' rel='noreferrer'>\r\n          {fact.source}\r\n        </a>\r\n      </div>\r\n    </StyleRoot>\r\n  );\r\n};\r\n\r\nexport default Fact;\r\n","import './App.css';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchFactAction } from './store/actions';\nimport Fact from './components/Fact';\nimport Radium, { StyleRoot } from 'radium';\nimport { pulse } from 'react-animations';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const fact = useSelector((state) => state.currentFact);\n  const loading = useSelector((state) => state.loading);\n\n  const fetchFact = useCallback(() => {\n    dispatch(fetchFactAction());\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchFact();\n  }, [fetchFact]);\n\n  const styles = {\n    pulse: {\n      marginTop: 30,\n      padding: 20,\n      cursor: 'pointer',\n      animation: 'x 1s infinite',\n      animationName: Radium.keyframes(pulse, 'pulse'),\n    },\n  };\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        {loading ? (\n          <div className='loader'>Loading...</div>\n        ) : (\n          <>\n            <Fact fact={fact} />\n\n            <StyleRoot>\n              <button style={styles.pulse} className='another-button' onClick={fetchFact}>\n                GET ANOTHER FACT\n              </button>\n            </StyleRoot>\n          </>\n        )}\n      </header>\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actions from './actions';\r\n\r\nexport const initialState = {\r\n  currentFact: null,\r\n  loading: true,\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.FETCH_FACT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentFact: null,\r\n      };\r\n    case actions.FETCH_FACT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentFact: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport * as actions from './actions';\r\n\r\nfunction* fetchFactEffect(action) {\r\n  try {\r\n    const data = yield fetch(\r\n      'https://uselessfacts.jsph.pl/random.json?language=en'\r\n    ).then((res) => res.json());\r\n    yield put(actions.fetchFactSuccessAction(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* watchEffects() {\r\n  yield takeEvery(actions.FETCH_FACT, fetchFactEffect);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { reducer } from './store/reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { watchEffects } from './store/effects';\nimport { Provider } from 'react-redux';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(watchEffects);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}